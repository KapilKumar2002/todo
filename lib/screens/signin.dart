import 'dart:convert';

import 'package:authapi/constants/constants.dart';
import 'package:authapi/models/authapiModel.dart';
import 'package:authapi/models/authdatamodel.dart';
import 'package:authapi/screens/homepage.dart';
import 'package:authapi/screens/signup.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

class SignIn extends StatefulWidget {
  const SignIn({super.key});

  @override
  State<SignIn> createState() => _SignInState();
}

class _SignInState extends State<SignIn> {
  TextEditingController _email_usernameController = TextEditingController();
  TextEditingController _passwordController = TextEditingController();

  List<Autogenerated> userlist = [];

  Future<List<Autogenerated>> getdata() async {
    userlist = [];
    var response = await http.get(Uri.parse(Constants.url));
    var data = jsonDecode(response.body.toString());

    if (response.statusCode == 200) {
      for (Map<String, dynamic> i in data) {
        userlist.add(Autogenerated.fromJson(i));
      }
      return userlist.reversed.toList();
    } else {
      return userlist.reversed.toList();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        backgroundColor: Color.fromARGB(255, 90, 207, 203),
        body: Column(children: [
          Expanded(
              child: FutureBuilder(
                  future: getdata(),
                  builder:
                      ((context, AsyncSnapshot<List<Autogenerated>> snapshot) {
                    return Center(
                      child: Padding(
                        padding: const EdgeInsets.symmetric(
                            vertical: 10, horizontal: 20),
                        child: SingleChildScrollView(
                          child: Column(
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Text(
                                  "Log In",
                                  style: TextStyle(
                                      fontSize: 30,
                                      color: Colors.white,
                                      fontWeight: FontWeight.bold),
                                ),
                                SizedBox(
                                  height: 20,
                                ),
                                MyTextField("Username/email",
                                    _email_usernameController, false),
                                SizedBox(
                                  height: 20,
                                ),
                                MyTextField(
                                    "Password", _passwordController, true),
                                SizedBox(
                                  height: 20,
                                ),
                                ElevatedButton(
                                  onPressed: () async {
                                    int users = userlist.length;
                                    // print(users);
                                    for (var i = 0; i < users; i++) {
                                      if ((_email_usernameController.text ==
                                                  snapshot.data![i].email
                                                      .toString() ||
                                              _email_usernameController.text ==
                                                  snapshot.data![i].username) &&
                                          _passwordController.text ==
                                              snapshot.data![i].password) {
                                        // print(i);
                                        Navigator.of(context).push(
                                          MaterialPageRoute(
                                            builder: (context) => HomePage(
                                              username: snapshot
                                                  .data![i].username
                                                  .toString(),
                                            ),
                                          ),
                                        );
                                        SharedPreferences prefs =
                                            await SharedPreferences
                                                .getInstance();
                                        prefs.setString('email',
                                            snapshot.data![i].email.toString());
                                        prefs.setString(
                                            'username',
                                            snapshot.data![i].username
                                                .toString());
                                      }
                                    }
                                  },
                                  child: Text("Login"),
                                  style: ElevatedButton.styleFrom(
                                      backgroundColor:
                                          Color.fromARGB(255, 0, 233, 198),
                                      elevation: 10),
                                ),
                                const SizedBox(
                                  height: 10,
                                ),
                                Text.rich(TextSpan(
                                  text: "Don't have an account? ",
                                  style: const TextStyle(
                                      color: Colors.white, fontSize: 14),
                                  children: <TextSpan>[
                                    TextSpan(
                                        text: "Register here",
                                        style: const TextStyle(
                                            color: Colors.white,
                                            decoration:
                                                TextDecoration.underline),
                                        recognizer: TapGestureRecognizer()
                                          ..onTap = () {
                                            Navigator.of(context).push(
                                                MaterialPageRoute(
                                                    builder: (context) =>
                                                        SignUp()));
                                          }),
                                  ],
                                )),
                              ]),
                        ),
                      ),
                    );
                  })))
        ]));
  }

  Widget MyTextField(
      String hint, TextEditingController textController, bool obscure) {
    return TextFormField(
      obscureText: obscure,
      onChanged: (value) {},
      controller: textController,
      decoration: InputDecoration(
          fillColor: Colors.white,
          labelText: hint,
          labelStyle: TextStyle(color: Colors.white),
          errorBorder:
              OutlineInputBorder(borderSide: BorderSide(color: Colors.red)),
          focusedBorder: OutlineInputBorder(
            borderSide: BorderSide(color: Colors.black),
          ),
          enabledBorder:
              OutlineInputBorder(borderSide: BorderSide(color: Colors.black))),
    );
  }
}
